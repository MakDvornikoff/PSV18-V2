
Дворников М.А.PSV18 - V2

Курс «Язык программирования C»
Домашнее задание из методички "Урок 7"

1. Дан двухмерный массив размерностью 3X4.Необ -
ходимо найти количество элементов значение которых
равно нулю.
2. Дана квадратная матрица порядка n(n строк, n стол -
	бцов).Найти наибольшее из значений элементов, распо -
	ложенных в тёмно - синих частях матриц.
	Все массивы в данном домашнем задании заполняются
	случайным образом.


// ДЗ 1 =================================================

#include <iostream>
#include <stdlib.h>
#include <time.h>
using namespace std;

void main()
{
	srand(time(NULL));
	setlocale(LC_ALL, "RUSSIAN");

	int const DiapazonRnd = 9; // максимальное значение для генерации Rand() 0..9
	int const SizeRow = 3;
	int const SizeColumn = 4;
	int arr[SizeRow][SizeColumn];

	//заполнение массива  и вывод на экран
	for (int i = 0; i < SizeRow*SizeColumn; i++)
	{
		cout << "   " << (arr[0][i] = rand() % (DiapazonRnd + 1)) << "\t|";
		if (!((i + 1) % SizeColumn)) cout << "\n";
	}

	//поиск нулевых элементов
	int CountOfZero = 0;
	for (int i = 0; i < SizeRow*SizeColumn; i++) if (!arr[0][i])  ++CountOfZero;

	cout << "\nКоличество нулевых элементов = " << CountOfZero << "\n\n";
}


// ДЗ 2 =================================================

#include <iostream>
#include <math.h>
#include <time.h>
using namespace std;

void main()
{
	setlocale(LC_ALL, "RUSSIAN");
	// для вариантов используем кодировку в двоичном виде.квадрат представляет из себя 4 закрашенных сектора.сектор - есть треугольник.
	// для варианта "в" закрашен верхний треугольник, для "г" закрашен нижний треугольник, для "ж" левый, для "з" правый.
	// для каждого варианта выделено по одному биту. Начало - верхний треугольник. Ему соответствует бит "0". далее по часовой стрелке,
	// так, что 3 бит соответствует левому треугольнику и варианту "ж".
	// создаём массив с содержанием закрашенных треугольников.
	char const CountVariants = 10; //число вариантов
	char Variant[CountVariants]{  //массив с кодировками вариантов
		0b0011, // Вариант "а"
		0b1100, // Вариант "б"
		0b0001, // Вариант "в"
		0b0100, // Вариант "г"
		0b0101, // Вариант "д"
		0b1010, // Вариант "е"
		0b1000, // Вариант "ж"
		0b0010, // Вариант "з"
		0b1001, // Вариант "и"
		0b0110  // Вариант "й" (в задании "к"), т.к. привязываю к последовательности ASCII кодов
	};
	int const DiapazonRnd = 9; // максимальное значение для генерации Rand() 0..9
	const int n = 5;//размер квадратного массива. обязательно нечетное число >0
	int arr[n][n];

	//заполнение массива  и вывод на экран
	for (int i = 0; i < n*n; i++)
	{
		cout << "  " << (arr[0][i] = rand() % (DiapazonRnd + 1)) << "\t|";
		if (!((i + 1) % n)) cout << "\n";
	}

	while (1)
	{
		// ================= МЕНЮ ==================
		cout << "Выберите вариант (цифру):\n";
		for (int i = 0; i< CountVariants; i++) cout << "Вариант '" << (char)(i + 224) << "'  (" << i + 1 << ")\n";
		cout << "Выход        (0)\n------------->";
		int var;  cin >> var;
		if (var < 1 || var>10) break;
		--var;

		//=======Вывод на экран и обработка ========
		int max = arr[n / 2][n / 2];
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				if (((j > i - 1 && j < n - i) && (Variant[var] & 0b0001)) ||		// верхний треугольник
					((j > i - 1 && j > n - i - 2) && (Variant[var] & 0b0010)) ||	// правый треугольник
					((j<i + 1 && j>n - i - 2) && (Variant[var] & 0b0100)) ||		// нижний треугольник
					((j < i + 1 && j < n - i) && (Variant[var] & 0b1000)))	    	// левый треугольник
				{
					cout << "   " << arr[i][j] << "\t|";
					if (max < arr[i][j]) max = arr[i][j];
				}
				else cout << "    \t|";
			}
			cout << "\n";
		}
		cout << "Максимальное значение = " << max << "\n\n";
	}
}
